;
****************************
*                          *
* APPLESOFT PROGRAM EDITOR *
*                          *
*           BY             *
*                          *
*     HUIBERT AALBERS      *	
*                          *
****************************
;
;------------------------------
;DEFINICION DE LAS RUTINAS DEL
;APPLESOFT EN ROM O DEL D.O.S
;------------------------------
BUF		EQU	$200		;BUFFER UTILIZADO POR INLIN
AMPER		EQU	$3F5		;VECTOR DEL &
PRGM		EQU	$801		;PRINCIPIO DEL PROGRAMA
CMDLP		EQU	$7069		;BUCLE PRINCIPAL DEL PROGRAMA
CMDLP2		EQU	$707F
PROCLN		EQU	$709F		;ENTRA UNA LINEA DE PROGRAMA
BUF2		EQU	$9400		;BUFFER SECUNDARIO UTILIZADO POR REPEAT
BUF3		EQU	$9500		;BUFFER UTILIZADO POR SEARCH
CLOSEALL	EQU	$A316		;CIERRA TODOS LOS FICHEROS
CONVERT		EQU	$A1B9		;CONVIERTE ASCII EN HEXADECIMAL
LININDEX	EQU	$AA5D		;REGISTRO UTILIZADO POR $A1B9
TKNTBL		EQU	$D0D0		;TABLA DE COMANDOS DEL BASIC
BLTU		EQU	$D393		;MUEVE 256 OCTETOS HACIA ARRIBA
INLIN		EQU	$D52C		;ENTRA UNA LINEA HACIA EL BUFFER
PARSE		EQU	$D559		;CODIFICA UNA LINEA ENTRADA POR INLIN
FNDLIN		EQU	$D61A		;BUSCA UNA LINEA DE PROGRAMA
INITPTRS	EQU	$D665
LINGET		EQU	$DA0C		;PONE EN LINNUM EL NO DE LINEA CORRIENTE
CRDO		EQU	$DAFB		;IMPRIME UN CARRIAGE RETURN
OUTSP		EQU	$DB57		;IMPRIME UN ESPACIO
OUTDO		EQU	$DB5C		;IMPRIME EL CARACTER CONTENIDO EN A
ISLETC		EQU	$E07D		;COMPRUEBA SI A ES UNA LETRA (A-Z)
LINPRT		EQU	$ED24		;IMPRIME X,A
VTAB		EQU	$F25A		;TABULACION VERTICAL
PRBL2		EQU	$F94A		;IMPRIME X ESPACIOS
UP		EQU	$FC1A		;SUBE DE UNA LINEA EN LA PANTALLA
HOME		EQU	$FC58		;BORRA LA PANTALLA
KEYIN		EQU	$FD0C		;ENTRA UN CARACTER
KEYIN2		EQU	$FD1B		;ESPERA QUE SEA PULSADA UNA TECLA
GETLN		EQU	$FD6A
COUT		EQU	$FDED		;IMPRIME EL CARACTER CONTENIDO EN A
PROUT		EQU	$FE95		;INICIALIZA EL SLOT (A)
;
;------------------------------
;DEFINICION DE LAS DIRECCIONES
;EN PAGINA CERO
;------------------------------
;			
POSCUR		EPZ	$06		;POS. CURSOR TRAS LINPRT DURANTE LIST
ALLOWPTR	EPZ	$07	
ADL		EPZ	$08		;VECTOR ENTRADA DEL FILE MANAGER
CRDNB		EPZ	$0F
LINE		EPZ	$18		;REGISTRO TEMPORAL SOBRE 2 OCTETOS
CURLIGNE	EPZ	$1A		;CONTIENE LA LINEA CORRIENTE
ADRNXT		EPZ	$1C		;LOW BYTE DIRECCION LINEA SIGUIENTE
LSTLIN		EPZ	$1D		;DIRECCION ULTIMA LINEA DURANTE BOTTOM
INDEX2		EPZ	$1F		;REGISTRO TEMPORAL.GUARDA X DURANTE PRLET
CH		EPZ	$24		;POSICION DEL CURSOR (HORIZONTAL)
CV		EPZ	$25		;POSICION VERTICAL DEL CURSOR
PROMPT		EPZ	$33		;CONTIENE EL CARACTER ">"
LINNUM		EPZ	$50		;CONTIENE EL NUMERO DE LINEA TRAS LINGET
LIST2		EPZ	$54		;FLAG PARA HACE PRBUF ANTES DE CMDLP
ESCFLG		EPZ	$55		;FLAG QUE CONTROLA EL MODO "ESC"
INDEX		EPZ	$5E		;REGISTRO TEMPORAL PARA MOVER MEMORIA
DEST		EPZ	$60
TXTTAB		EPZ	$67		;DIRECCION PRINCIPIO DEL PROGRAMA BASIC
VARTAB		EPZ	$69		;DIRECCION PRINCIPIO VARIABLES SIMPLES
STREND		EPZ	$6D		;DIRECCION FIN VARIABLES DIMENSIONADAS
FRETOP		EPZ	$6F		;DIRECCION FIN VARIABLES ALFANUMERICAS
MEMSIZ		EPZ	$73		;DIRECCION FIN DE LA MEMORIA UTILIZABLE
CURLIN		EPZ	$75		;FLAG (CONTIENE FF EN MODO INMEDIATO)
FORPNT		EPZ	$85		;NUEVA DIRECCION DE UNA CADENA DESPLAZADA
HIGHDS		EPZ	$94		;REGISTRO TEMPORAL SOBRE 5 OCTETOS
HIGHTR		EPZ	$96		;COMPONE CON HIGHDS EL REGISTRO INTERNO TEMPS1
LOWTR		EPZ	$9B		;REGISTRO TEMPORAL SOBRE 5 OCTETOS
DSCTMP		EPZ	$9D		;REGISTRO TEMPORAL SOBRE 6 OCTETOS
PRGEND		EPZ	$AF		;FINAL DE LA ZONA PROGRAMA BASIC
CHRGET		EPZ	$B1		;SUBRUTINA QUE LEE EL SIGIENTE CARACTER
;					;DEL PROGRAMA BASIC
TXTPTR		EPZ	$B8		;DIRECCION CARACTER OBTENIDO POR CHRGET
ERRFLG		EPZ	$D8		;FLAG QUE INDICA SI ONERR ESTA ACTIVO
INC		EPZ	$CE		;VALOR DEL INCREMENTO EN MODO AUTO
LINDEX		EPZ	$CF		;COPIA DE LININDEX ANTES DE $A1B9
ADL2		EPZ	$F9		;REGISTRO TEMPORAL SOBRE 2 OCTETOS
SAVEA		EPZ	$FB		;REGISTRO TEMPORAL SOBRE 1 OCTETO
COM		EPZ	$FC		;REGISTRO TEMPORAL SOBRE 1 OCTETO
FIRST		EPZ	$FD		;REGISTRO TEMPORAL SOBRE 1 OCTETO
TEMP		EPZ	$FD
AUTOFLG		EPZ	$FF		;FLAG RELATIVO AL MODO AUTO
;
		ORG	$746E
		OBJ	$800
;
;------------------------------
; TRATAMIENTO DE LOS COMANDOS
; DETERMINA EL COMANDO Y LO
; EJECUTA
;------------------------------
;
PARSE2:
		LDY	#$00
		STY	COM
		LDX	#$FF
^1		INX
		LDA	BUF,X
		CMP	#$20
		BEQ	<1
		LDA	BUF,X
		AND	#%00111111
		STA	FIRST
		TXA
		STA	SAVEA
		TAY
		LDX	#$00
^2		LDA	COMTBL,X
		BNE	>3
		INC	COM
^3		LDA	COMTBL,X
		INX
		CMP	#$80
		BCS	<2
		CMP	FIRST
		BEQ	>4
		CMP	#$1D
		BEQ	ERR
		BNE	<2
^4		DEX
		INY
		INX
		LDA	BUF,Y
		BEQ	>5
		EOR	#%10000000
		CMP	#” “
		BEQ	>5
		CMP	COMTBL,X
		BNE	SUIT3
		INX
		LDA	COMTBL,X
		BNE	<4
^5		LDA	COM
		ASL
		TAX
		INX
		LDA	TBLADR,X
		PHA
		DEX
		LDA	TBLADR,X
		PHA
		LDA	COM
		CMP	#$0F
		BEQ	FUNJMP
		LDY	#$00
DEPBUF		LDA	BUF,Y
		STA	BUF2,Y
		INY
		BNE	DEPBUF
FUNJMP		RTS
SUIT3		LDY	SAVEA
		JMP	<2
ERR:
		LDA	#$01
		JMP	ERREUR
;
;------------------------------			
; SOUS-PROGRAMME PERMETTANT DE
; LISTER UNE LIGNE DE PROGRAMME
; EN 40 COLONNES.
; ENTREE: # DE LIGNE DANS LINNUM
; SORTIE: IMPRESSION DE LA LIGNE
;------------------------------	
;
LIST:
		JSR	FNDLIN		;BUSCA DIRECCION LINEA (LINNUM)
		BCC	NOLN		;SI NO EXISTE, ERROR
;------------------------------
; LIST+3 LISTE LA LIGNE POINTEE
; PAR LOWTR.
;------------------------------
		LDY	#$00		;INICIALIZACION: LAS COMILLAS ESTAN
		STY	$4D		;CERRADAS
		LDY	#$02		;CARGA EN A EL PRIMER OCTETO DEL
		LDA	(LOWTR),Y	;NUMERO DE LINEA
		STA	CURLIGNE	;LO SALVAGUARDA
		TAX			;Y LO PASA AL REGISTRO X.
		INY			;CARGA EN A EL SEGUNDO OCTETO DEL
		LDA	(LOWTR),Y	;NUMERO DE LINEA
		STA	CURLIGNE+1	;Y LO SALVAGUARDA
		STY	FORPNT
		LDY	ALLOWPRT
		CPY	#$02
		BNE	>1
		LDX	#$00
		STX	ALLOWPRT
		JMP	>2
^1		JSR	LINPRT
		NOP			;SALVAGUARDA EN POSCUR LA COLUNA EN LA
^2		STY	POSCUR		;QUE ESTA EL CURSOR TRAS IMPRIMIR EL
		STY	INDEX2		;NUMERO DE LINEA
;
;PREND CARACTERE OU TOKEN
;
		LDA	#” “
LSTLN:
		LDY	FORPNT
PRCHR:
		CMP	#$22
		BNE	>1
		PHA
		LDA	#$FF
		EOR	$4D
		STA	$4D
		PLA
^1		CMP	#$3A
		BNE	>3
		PHA
		LDA	$4D
		BNE	>2
		LDA	#$8D
		JSR	PRLET
		LDX	POSCUR
		BEQ	>2
		JSR	PRBL2
^2		PLA
^3		JSR	PRLET
		INY
		LDA	(LOWTR),Y
		BNE	PROCHR
		BIT	$C000
		BPL	>4
		LDA	$C000
		BIT	$C010
		CMP	#” “
		BEQ	PAUSE
		CMP	$98		;CTRL-C
		BEQ	STOP
^4		LDX	INDEX2		;SI NO, PONE UN 0 AL FINAL DE BUF Y
		LDA	#$00
		STA	$200,X
		RTS
NOLN		LDA	#$00
		JMP	ERREUR
STOP		JSR	CRDO
		JMP	CMDLP
PAUSE		TYA
		PHA
		LDA	#” “
		JSR	KEYIN2
		PLA
		TAY
		CMP	#$98
		BEQ	STOP
		RTS
;
; PREND UN CARACTERE DANS LA TABLE
;
KEYCHR:
		INY
		BNE	S1
		INC	DSCTMP+1
S1:
		LDA	(DSCTMP),Y
		RTS
;
; IMPRIME CARACTERE OU MOT-CLE.
;
PROCHR:
		BPL	PRCHR
		SEC
		SBC	#$7F
		TAX
		STY	FORPNT
		LDY	#TKNTBL
		STY	DSCTMP
		LDY	/TKNTBL-$100
		STY	DSCTMP+1
		LDY	#$FF
NXKEY:			
		DEX
		BEQ	PRKEY
S2:			
		JSR	KEYCHR
		BPL	S2
		BMI	NXKEY
PRKEY:
		LDA	#” “
		JSR	PRLET
		JSR	KEYCHR
		BMI	S4
		JSR	PRLET
		BNE	PRKEY+5
S4:
		JSR	PRLET
		LDA	#” “
		JMP	LSTLN
PRLET:
		STA	$4C
		CMP	#$8D
		BNE	PRLET2
		LDA	ALLOWPRT
		BEQ	PRLET2-1
		JSR	CRDO
		LDA	$4C
		RTS
PRLET2		TXA
		PHA
		TYA
		PHA
		LDX	INDEX2
		LDA	$4C
		AND	#%01111111
		STA	BUF,X
		INX
		STX	INDEX2
		LDX	ALLOWPRT
		BEQ	END2
		PLA
		TAY
		PLA
		TAX
		LDA	$4C
		JSR	OUTDO
		RTS
END2		PLA
		TAY
		PLA
		TAX
		LDA	$4C
		RTS
;
;------------------------------
; SOUS-PROGRAMME DE TRAITEMENT
; D’ERREUR
;------------------------------
;
ERREUR:
		ASL
		TAY
		LDA	ERRTBL,Y
		STA	ADL
		INY
		LDA	ERRTBL,Y
		STA	ADL+1
		LDY	#$00
^1		LDA	(ADL),Y
		BEQ	>2
		JSR	COUT
		INY
		BNE	<1
^2		JMP	CMDLP
;
ESCODES:
		TAY
		INY
		TXA
		PHA
		LDX	#$00
^1		LDA	ESCTBL,X
		BEQ	>2
		INX
		BNE	<1
^2		INX
		DEY
		BNE	<1
		PLA
		TAY
		DEX’
^3		INX
		LDA	ESCTBL,X
		BEQ	>4
		STA	BUF,Y
		JSR	COUT
		INY
		BNE	<3
^4		TYA
		TAX
		LDA	#$00
		STA	ESCFLG
		LDA	#” “
		RTS
;
ESCTBL		HEX	00
		ASC	“ABS(“
		HEX	00
		ASC	“HPLOT”
		HEX	00
		ASC	“CLEAR”
		HEX	00
		ASC	“DATA”
		HEX	00
		ASC	“END”
		HEX	00
		ASC	“FOR”
		HEX	00
		ASC	“GOTO”
		HEX	00
		ASC	“HOME”
		HEX	00
		ASC	“INPUT"
		HEX	00
		ASC	“CHR$(“
		HEX	00
		ASC	“RIGHT$(“
		HEX	00	
		ASC	“LEFT$(“
		HEX	00
		ASC	“MID$(“
		HEX	00
		ASC	“NEXT”
		HEX	00
		ASC	“POKE”
		HEX	00
		ASC	“PEEK”
		HEX	00
		ASC	“CALL"
		HEX	00
		ASC	“RETURN”
		HEX	00
		ASC	“STEP”
		HEX	00
		ASC	“TEXT”
		HEX	00
		ASC	“HTAB"
		HEX	00
		ASC	“VTAB”
		HEX	00
		ASC	“DRAW”
		HEX	00
		ASC	“XDRAW”
		HEX	00
		ASC	“HCOLOR=“
		HEX	00
		ASC	“RESTORE"
		HEX	00
;
ERRTBL		ADR	NOLINE
		ADR	SORRY
		ADR	ERRBOT
		ADR	NOPRGM
		ADR	BADARG
		ADR	ERRHEX
;
COMTBL:
		HEX	0E
		ASC	“EXT”
		HEX	000C
		ASC	“INE”
		HEX	0004
		ASC	“ELETE”
		HEX	0005
		ASC	“DIT”
		HEX	0010
		ASC	“RINT”
		HEX	000E
		ASC	“OCOLUMN”
		HEX	0003
		ASC	“OLUMN”
		HEX	0001
		ASC	“UTON”
		HEX	0001
		ASC	“UTOFF”
		HEX	0014
		ASC	“OP”
		HEX	0002
		ASC	“OTTOM”
		HEX	0013
		ASC	“EARCH”
		HEX	000D
		ASC	“ODIFY”
		HEX	0001
		ASC	“PPEND”
		HEX	0010
		ASC	“P”
		HEX	0012
		ASC	“EPEAT”
		HEX	0010
		ASC	“R#”
		HEX	0008
		ASC	“$”
		HEX	0008
		ASC	“ELP”
		HEX	001D
TBLADR:
		ADR	NEXT-1
		ADR	LINE1-1
		ADR	DELETE-1
		ADR	EDIT-1
		ADR	PRINT-1
		ADR	NOCOL-1
		ADR	COLUMN-1
		ADR	AUTO-1
		ADR	AUTOFF-1
		ADR	TOP-1
		ADR	BOTTOM-1
		ADR	SEARCH-1
		ADR	MODIFY-1
		ADR	APPEND-1
		ADR	PP-1
		ADR	REPEAT-1
		ADR	PR-1
		ADR	DOLLAR-1
		ADR	HELP-1
		HEX	00
NEXT:
		JSR	CRDO
		JSR	LOOK
		CLC
		LDX	#$00
^1		INX
		LDA	BUF,X
		BEQ	NEXTMAS
		CMP	#”-“
		BNE	<1
		JMP	NEXTMNS
NEXTMAS:
		JSR	LOOK
		CLC
		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
		JSR	FNDLIN
^1		JSR	NXTLIN
		LDA	$44
		BNE	<1
		LDY	#$02
		LDA	(LOWTR),Y
		STA	CURLIGNE
		STA	LINNUM
		INY
		LDA	(LOWTR),Y
		STA	CURLIGNE+1
		STA	LINNUM+1
		JSR	FNDLIN
		BCC	>2
		JSR	LIST
		JSR	CRD0
		JMP	CMDLP
^2		JMP	BOTTOM
NXTLIN:
		DEC	$44
		LDY	#$00
		LDA	(LOWTR),Y
		STA	LINNUM
		INY
		LDA	(LOWTR),Y
		STA	LOWTR+1
		LDA	LINNUM
		STA	LOWTR
		RTS
NEXTMNS:
		INX
		STX	LININDEX
		JSR	CONVERT
		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
^1		JSR	FNDLIN
		JSR	NXTLIN2
		BCC	>2
		LDA	$44
		BNE	<1
		LDA	LINNUM
		STA	CURLIGNE
		LDA	LINNUM+1
		STA	CURLIGNE+1
		LDA	#$01
		STA	ALLOWPRT
		JSR	LIST
		JSR	CRDO
		JMP	CMDLP
^2		JMP	TOP
NXTLIN2:
		CLC
		DEC	$44
		DEC	LOWTR+1
		LDY	#$FF
^1		DEY
		CPY	#$00
		BEQ	>4
		LDA	(LOWTR),Y
		CMP	LOWTR
		BEQ	>2
		BNE	<1
^2		DEY
		LDA	(LOWTR),Y
		BEQ	>3
		INY
		JMP	<1
^3		INY
		INY
		INY
		LDA	(LOWTR),Y
		STA	LINNUM
		INY
		LDA	(LOWTR),Y
		STA	LINNUM+1
		SEC
		RTS
^4		CLC
		RTS
LINE1:
		JSR	LOOK
		JSR	CRDO
		LDA	$44
		STA	$50
		LDA	$45
		STA	$51
		JSR	LIST
		JSR	CRDO
		JMP	CMDLP
LOOK:			
		LDA	#$00
		STA	$44
		STA	$45
		JSR	POSBUF
		LDX	#$FF
BLE		INX
		LDA	BUF,X
		CMP	#” “
		BEQ	BLE
BLE2		INX
		LDA	BUF,X
		BEQ	>3-3
		CMP	#” “
		BNE	BLE2
^2		INX	
		LDA	BUF,X
		CMP	#” “
		BEQ	<2
		LDA	BUF,X
		BEQ	>3-3
		CMP	#”-“
		BEQ	<2
		CMP	#$B0
		BCC	>4
		CMP	#$BA
		BCS	>4
		STX	LININDEX
		STX	LINDEX
		JSR	CONVERT
		CLC
		LDA	$44
		BNE	>3
		INC	$44		;SI EL ARGUMENTO ES 0,LO CAMBIA EN 1
		SEC
^3		RTS
^4		LDA	#$04		;EL ARGUMENTO NO ES UN NUMERO.
		JMP	ERREUR
DELETE:
		JSR	LOOK
		BCC	>1
		LDA	#$01
		STA	$44
^1		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
		JSR	FNDLIN
		LDA	LOWTR
		STA	ADL
		LDA	LOWTR+1
		STA	ADL+1
		LDA	$36
		PHA
		LDA	$37
		PHA
		LDA	#PRLIGNE
		STA	$36
		LDA	/PRLIGNE
		STA	$37
		LDA	#$00
		STA	$FE
		LDY	#$02
		LDA	(LOWTR),Y
		TAX
		INY
		LDA	(LOWTR),Y
		JSR	LINPRT
		LDY	$FE
		LDA	#$00
		STA	BUF,Y
		PLA
		STA	$37
		PLA
		STA	$36
		LDA	#$02
		STA	SAVEA
		LDX	#$FF
		LDY	#$01
		JMP	CMDLP2+8
ENTRY2		LDY	#$00
		LDA	(ADL),Y
		BNE	>0
		INY
		LDA	(ADL),Y
		BNE	>0
		JMP	BOTTOM
^0		LDY	#$02
		LDA	(ADL),Y
		STA	CURLIGNE
		INY
		LDA	(ADL),Y
		STA	CURLIGNE+1
		DEC	$44
		LDA	$44
		BNE	<1
		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
		JSR	LIST
		JMP	CMDLP
EDIT:
		JSR	CRDO
		LDA	#$00
		STA	COM
		JSR	LOOK
		BCS	>1
		LDA	$44
		STA	CURLIGNE
		LDA	$45
		STA	CURLIGNE+1
^1		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
		LDA	#$00
		STA	ALLOWPRT
		JSR	LIST
		CPX	#$FF
		BEQ	>0
		LDA	#$20
		STA	BUF,X
		INX
		LDA	#$00
		STA	BUF,X
^0		LDY	#$00
^2		LDA	($28),Y
		CMP	#” “
		BEQ	>3
		AND	#%01111111
		STA	BUF,Y
		INY
		JMP	<2
^3		LDY	#$01
		STY	ALLOWPRT
		DEY
		STY	CH
		JSR	PRBUF
		LDA	POSCUR
		STA	INDEX
		JSR	CURPOS
		LDA	#” “
		LDX	#!39
^0		STA	$7D0,X
		DEX
		BNE	<0
		LDX	#$00
^0		LDA	MESSEDIT,X
		BEQ	>4
		STA	$7D0,X
		INX
		BNE	<0
^4		LDA	#$00
		STA	ESCFLG
		JSR	STAT
		JSR	KEYIN
		CMP	#$95
		BEQ	CTRLU
		CMP	#$88
		BEQ	CTRLH
		PHA
		LDA	COM
		BNE	TYPE
		PLA	
		CMP	#$9B
		BNE	>5
		LDA	#$01
		STA	COM
		JMP	<4
^5		CMP	#”I”
		BNE	>5
		JMP	INSCHR
^5		CMP	#”F”
		BNE	>5
		JMP	FINDCHR
^5		CMP	#”D”
		BNE	>5
		JMP	CHRDEL
^5		CMP	#”B”
		BNE	>5
		JMP	BEGIN
^5		CMP	#”E”
		BNE	>5
		JMP	END
^5		CMP	#”C”
		BNE	>5
		JMP	CUT
^5		CMP	#$98
		BNE	>5
		JMP	CTRLX
^5		CMP	#$8D
		BNE	<4
		JMP	CR
CTRLU		LDX	INDEX
		INX
		LDA	BUF,X
		BEQ	<4
		STX	INDEX
		JSR	CURPOS
		JMP	<4
CTRLH		LDX	INDEX
		CPX	POSCUR
		BEQ	<4
		DEX	
		STX	INDEX
		JSR	CURPOS
		JMP	<4
TYPE		PLA
		CMP	#$9B
		BNE	>1
		LDA	#$00
		STA	COM
		JMP	<4
^1		CMP	#$8D
		BNE	>2
		JMP	CR
^2		AND	#%01111111
		LDY	INDEX
		STA	BUF,Y
		CPY	#$FA
		BEQ	>3
		INY
		LDA	BUF,Y
		BNE	>3-2
		LDA	#$20
		STA	BUF,Y
		INY
		LDA	#$00
		STA	BUF,Y
		DEY
		STY	INDEX
^3		JSR	PRBUF2
		JSR	CURPOS
		JMP	<4
INSCHR		LDX	#$FF
^1		INX
		LDA	BUF,X
		BEQ	>2
		CPX	#$FA
		BNE	<1
		JMP	<4
^2		LDY	INDEX
		LDA	BUF,Y
		ORA	#%10000000
		STA	BUF,Y
		INX
		TXA
		TAY
		INY
^3		DEX
		DEY
		LDA	BUF,X
		CMP	#$80
		BCS	>0
		STA	BUF,Y
		JMP	<3
^0		AND	#%01111111
		STA	BUF,Y
		LDA	#$20
		STA	BUF,X
		JSR	PRBUF2
		JSR	CURPOS
		JMP	<4
CHRDEL		LDY	INDEX
		LDA	BUF,Y
		BNE	>1
		JMP	<4
^1		TYA
		TAX
		INX
^2		LDA	BUF,X
		BEQ	>3
		STA	BUF,Y
		INX
		INY
		BNE	<2
^3		STA	BUF,Y
		JSR	PRBUF2
		JSR	CURPOS
		JMP	<4
FINDCHR		JSR	KEYIN
		AND	#%01111111
		LDY	INDEX
^1		INY
		LDX	BUF,Y
		BEQ	>2
		CMP	BUF,Y
		BNE	<1
		STY	INDEX
		JSR	PRBUF2
		JSR	CURPOS
^2		JMP	<4
END		LDY	INDEX
^1		INY
		LDA	BUF,Y
		BEQ	>2
		JMP	<1
^2		DEY
		STY	INDEX
		JSR	PRBUF2
		JSR	CURPOS
		JMP	<4
BEGIN		LDY	POSCUR
		STY	INDEX
		JSR	PRBUF2
		JSR	CURPOS
		JMP	<4
CUT		LDY	INDEX
		LDA	#$00
		STA	BUF,Y
		JSR	PRBUF2
		JSR	CURPOS
		JMP	<4
CTRLX		LDA	#$00
		STA	INDEX
		JSR	CURPOS
		JMP	EDIT+20
CR		JSR	PRBUF2
		JSR	CRDO
		LDX	#!39
		LDA	#” “
^0		STA	$7D0,X
		DEX
		CPX	#$FF
		BNE	<0
		LDX	#$00
^1		LDA	MESSDOS,X
		BEQ	>2
		STA	$7D0,X
		INX
		BNE	<1
^2		LDY	#$01
		LDX	#$FF
		STY	TXTPTR+1
		STX	TXTPTR
		JSR	CHRGET
		JMP	PROCLN
STAT		LDA	COM
		BNE	>3
		LDX	#$00
^1		LDA	MESSCOM,X
		BEQ	>2
		STA	$7D6,X
		INX
		BNE	<1
^2		RTS
^3		LDX	#$00
		LDA	MESSTYPE,X
		BEQ	>4
		STA	$7D6,X
		INX
		BNE	<3+2
^4		RTS
PRBUF2		LDY	#$00	
		STY	CH	
^1		LDA	($28),Y	
		CMP	#”>"	
		BEQ	>2	
		JSR	UP	
		JMP	<1	
^2		INY		
		LDA	($28),Y	
		CMP	#” “	
		BEQ	<2	
		CMP	#”E"	
		BNE	>3	
		INC	CV	
		INC	CV	
		JSR	$FC22	
		JSR	PRBUF	
		RTS		
^3		JSR	UP	
		JMP	PRBUF2	
		RTS		
PRINT:
		LDA	#$01	
		STA	ALLOWPRT	
		JSR	CRDO	
		JSR	LOOK	
		BCC	>1	
		LDA	#$FF	
		STA	$44
		STA	$45
^1		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
^1		JSR	PRINTUNA
		BCC	>3
		LDA	$44
		BNE	<1
		LDA	$45
		BEQ	>2
		DEC	$45
		JMP	<1
^2		JMP	CMDLP
^3		JMP	BOTTOM
PRINTUNA:
		DEC	$44
		LDA	LINNUM
		STA	CURLIGNE
		LDA	LINNUM+1
		STA	CURLIGNE+1
		JSR	FNDLIN
		BCC	>1
		JSR	LIST
		CLC
		INY
		LDA	(LOWTR),Y
		BNE	>0
		INY
		LDA	(LOWTR),Y
		BNE	>0+1
		BEQ	>1
^0		INY
		INY
		LDA	(LOWTR),Y
		STA	LINNUM
		INY	
		LDA	(LOWTR),Y
		STA	LINNUM+1
		JSR	CRDO
		SEC	
^1		RTS	
COLUMN:
		LDX	#$00
BCLE		LDA	TBLCOL,X
		STA	$750,X
		INX
		CPX	#!40
		BNE	BCLE
		JMP	CMDLP
NOCOL:
		LDX	#$00
		LDA	#” "
BCLE2		STA	$750,X
		INX	
		CPX	#!40
		BNE	BCLE2
		JMP	CMDLP
AUTO:
		LDA	#$0A
		STA	INC
		JSR	LOOK
		BCS	>1
		LDA	$44
		STA	LINE
		LDA	$45
		STA	LINE+1
		BNE	CHKCOM-2
		LDA	LINE
		BNE	CHKCOM-2
^1		LDA	#$0A
		STA	LINE
		LDX	#$00
CHKCOM		INX
		LDA	BUF,X
		BEQ	NOARG
		CMP	#”,”
		BNE	CHKCOM
		JSR	BLE2+10
		LDA	$44
		STA	INC
NOARG		SEC
		LDA	LINE
		SBC	INC
		STA	LINE
		LDA	LINE+1
		SBC	#$00
		STA	LINE+1
		LDA	#$01
		STA	AUTOFLG
		JMP	CMDLP
AUTOFF:
		LDA	#$00
		STA	AUTOFLG
		STA	LINE+1
		LDA	#!20
		STA	LINE
		LDA	#$0A
		STA	INC
		JMP	CMDLP
TOP:
		JSR	LOOKPRGM
		LDX	#$FF
^1		INX
		LDA	ERRTOP,X
		BEQ	>2
		JSR	COUT
		JMP	<1
^2		LDA	$803
		STA	LINNUM
		STA	CURLIGNE
		LDA	$804
		STA	LINNUM+1
		STA	CURLIGNE+1
		JSR	CRDO
		JSR	LIST
		JSR	CRDO
		JMP	CMDLP
BOTTOM:
		LDA	#$01
		STA	ALLOWPRT
		JSR	LOOKPRGM
		LDX	#$FF
^1		INX
		LDA	ERRBOT,X
		BEQ	>2
		JSR	COUT
		JMP	<1
^2		LDA	$6A
		TAX
		DEX
		STX	LSTLIN+1
		LDA	$69
		STA	LSTLIN
		LDY	#$F8
^3		DEY
		LDA	(LSTLIN),Y
		BNE	<3
		TYA
		INY
		INY
		INY
^4		PHA
		LDA	(LSTLIN),Y
		STA	CURLIGNE
		STA	LINNUM
		INY
		LDA	(LSTLIN),Y
		STA	CURLIGNE+1
		STA	LINNUM+1
		JSR	FNDLIN
		BCS	>5
		PLA
		TAY
		DEY
		JMP	<4
^5		JSR	CRDO
		JSR	LIST
		JSR	CRDO
		JMP	CMDLP
BOTTOM2:
		LDA	#$02
		JMP	ERREUR
SEARCH:
		JSR	CRDO
		JSR	POSBUF
		LDA	#$01
		STA	ADL+1
		LDX	#$FF
^0		INX
		LDA	BUF,X
		CMP	#” “
		BEQ	<0
^1		INX
		LDA	BUF,X
		CMP	#” “
		BNE	<1
^2		LDY	#$FF
		INY
		INX
		LDA	BUF,X
		CMP	#”]”
		BEQ	>3
		STA	BUF3,Y
		CMP	#$00
		BNE	<2+2
		LDA	#$FF
		STA	$44
		BNE	>4
^3		LDA	#$00
		STA	BUF3,Y
		INX
		LDA	BUF,X
		CMP	#” “
		BEQ	<3+5
		STX	LININDEX
		LDA	#$00
		STA	$44
		STA	$45
		JSR	CONVERT
		CLC
		LDA	$45
		BNE	>7
^4		LDX	$44
		BEQ	>6
		LDA	ADL+1
		BEQ	>0
		JSR	SRCHLIN
		BCS	>5
		JMP	<4
^0		JMP	BOTTOM
^5		LDA	#$01
		STA	ALLOWPRT
		LDA	CURLIGNE
		STA	ADL2
		LDA	CURLIGNE+1
		STA	ADL2+1
		LDA	#$00
		STA	CH
		JSR	LIST
		LDA	ADL2+1
		STA	CURLIGNE+1
		LDA	ADL2
		STA	CURLIGNE
		JSR	CRDO
		JMP	<4
^6		LDA	LINNUM
		STA	CURLIGNE
		LDA	LINNUM+1
		STA	CURLIGNE+1
		LDA	#$01
		STA	ALLOWPRT
		JMP	CMDLP
^7		LDA	#$04
		JMP	ERREUR
SRCHLIN:
		CLC	
		LDA	#$02
		STA	ALLOWPRT
		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
		DEC	$44
		JSR	FNDLIN
		BCS	>1
^0		LDA	#$01
		STA	ALLOWPRT
		JMP	BOTTOM
^1		JSR	LIST
		INY
		LDA	(LOWTR),Y
		BNE	>1
		INY
		LDA	(LOWTR),Y
		BNE	>2
		LDA	#$00
		STA	ADL+1
		JMP	>2
^1		INY	
^2		INY	
		LDA	(LOWTR),Y
		STA	CURLIGNE
		INY	
		LDA	(LOWTR),Y
		STA	CURLIGNE+1
		LDY	#$00
ENTRY3		LDX	#$00
^1		LDA	BUF3,X
		STA	FIRST
		LDA	BUF,Y
		EOR	#%10000000
		CMP	#$80
		BEQ	>3
		CMP	FIRST
		BEQ	>2
		INY	
		JMP	<1+5
^2		STY	FORPNT
		INX
		INY
		LDA	BUF3,X
		BEQ	>4
		AND	#%01111111
		CMP	BUF,Y
		BEQ	<2+2
		LDY	FORPNT
		INY
		LDX	#$00
		JMP	<1+5
^3		CLC
		RTS
^4		SEC
		RTS
MODIFY:		
		JSR	CRDO
		JSR	POSBUF
		LDA	#$01
		STA	ADL+1
		LDX	#$FF
^0		INX
		LDA	BUF,X
		CMP	#” “
		BEQ	<0
^1		INX	
		LDA	BUF,X
		CMP	#” “
		BNE	<1
		LDY	#$FF
^2		INY
		INX
		LDA	BUF,X
		BNE	#”]”
		BEQ	>3
		CMP	#$80
		BEQ	>7
		STA	BUF3,Y
		JMP	<2
^3		LDA	#$00
		STA	BUF3,Y
^4		INX
		INY
		LDA	BUF,X
		CMP	#$80
		BEQ	>8
		CMP	#”]”
		BEQ	>5
		STA	BUF3,Y
		JMP	<4
^5		LDA	#$00
		STA	BUF3,Y
^6		INX	
		LDA	BUF,X
		CMP	#" “
		BEQ	<6
		STX	LININDEX
		LDA	#$00
		STA	$44
		STA	$45
		JSR	CONVERT
		LDA	$45
		BEQ	>8
^7		LDA	#$04
		JMP	ERREUR
^8		LDA	$44
		BNE	ENTRY
		LDA	#$FF
		STA	$44
ENTRY		LDX	$44
		BEQ	>0
		LDA	ADL+1
		BEQ	>9
		JSR	SRCHLIN
		BCS	>1
		BCC	ENTRY
^9		JMP	BOTTOM
^0		LDA	#$01
		STA	ALLOWPRT
		JMP	CMDLP
^1		STY	FIRST
		LDY	#$00
		INX
^2		CPY	FORPNT
		BEQ	>3
		LDA	BUF,Y
		STA	$100,Y
		INY
		JMP	<2
^3		LDA	BUF3,X
		BEQ	>4
		STA	$100,Y
		INX
		INY
		JMP	<3
^4		STY	ADL
		LDX	FIRST
^5		LDA	BUF,X
		BEQ	>6
		STA	$100,Y
		INX
		INY
		BNE	<5
		LDA	#$00
		STA	$1FF
^6		STA	$100,Y
		LDY	#$00
^7		LDA	$100,Y
		BEQ	>8
		AND	#%01111111
		STA	BUF,Y
		INY
		JMP	<7
^8		STA	BUF,Y
		LDY	ADL
		JSR	ENTRY3
		BCS	<1
		LDA	$36
		PHA
		LDA	$37
		PHA
		LDA	#PRLIGNE
		STA	$36
		LDA	/PRLIGNE
		STA	$37
		LDA	#$00
		STA	$FE
		LDA	LINNUM+1
		LDX	LINNUM
		JSR	LINPRT
		LDY	$FE
		LDA	#$20
		STA	BUF,Y
		PLA
		STA	$37
		PLA
		STA	$36
		LDA	#$01
		STA	SAVEA
		LDX	#$FF
		LDY	#$01
		JMP	CMDLP2+8
PRLIGNE:
		LDY	$FE
		AND	#%01111111
		STA	BUF,Y
		INC	$FE
		RTS
APPEND:
		LDA	#$00
		STA	ALLOWPRT
		LDA	CURLIGNE
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	LINNUM+1
		JSR	CRDO
		JSR	LIST
		LDY	#$00
^1		LDA	($28),Y
		CMP	#” "
		BEQ	>2
		AND	#%01111111
		STA	BUF,Y
		INY	
		JMP	<1
^2		LDY	#$01
		STY	ALLOWPRT
		DEY
		STY	CH
		LDY	INDEX2
		LDX	#$FF
^3		INX
		LDA	BUF2,X
		CMP	#$20
		BEQ	>4-1
^3		LDA	BUF2,X
		CMP	#$20
		BEQ	>4-1
		INX
		JMP	<3
		DEY
^4		INX
		INY
		LDA	BUF2,X
		BEQ	>5
		AND	#%01111111
		STA	BUF,Y
		BNE	<4
^5		STA	BUF,Y
		LDA	#$02
		STA	LIST2
		LDY	#$01
		LDX	#$FF
		STY	TXTPTR+1
		STX	TXTPTR
		JSR	CHRGET
		JMP	PROCLN
PRBUF:
		LDA	#$00
		STA	CRDNB
		LDX	#$00
		STX	$4D
^1		LDA	BUF,X
		CMP	#$22
		BNE	>2
		PHA
		LDA	#$FF
		EOR	$4D
		STA	$4D
		PLA
^2		CMP	#$3A
		BNE	>3
		LDY	$4D
		BNE	>3
		JSR	$FC42
		LDA	#$8D
		JSR	OUTDO
		LDA	POSCUR
		STA	CH
		LDA	#$3A
		INC	CRDNB
^3		CMP	#$00
		BEQ	>5
		JSR	OUTDO
		LDA	CH
		CMP	#!39
		BNE	>0
		JSR	$FC9C
^0		LDA	CH
		BNE	>4
		INC	CRDNB
^4		INX
		BNE	<1
^5		JSR	$FC42
		JSR	CRDO
		RTS
CURPOS:
		JSR	CURPOS2
		LDA	#$00
		STA	CRDNB
		STA	FIRST
		LDX	#$00
		STX	$4D
^1		LDA	BUF,X
		CPX	INDEX
		BEQ	>5
		CMP	#$22
		BNE	>2
		PHA	
		LDA	#$FF
		EOR	$4D
		STA	$4D
		PLA
^2		CMP	#$3A
		BNE	>3
		LDY	$4D
		BNE	>3
		INC	CRDNB
		LDY	POSCUR
		STY	FIRST
^3		CMP	#$00
		BEQ	>6
		INC	FIRST
		LDA	FIRST
		CMP	#!40
		BNE	>4
		LDA	#$00
		STA	FIRST
		INC	CRDNB
^4		INX
		BNE	<1
^5		CMP	#$3A
		BEQ	>7
		LDA	FIRST
		STA	CH
		LDA	CRDNB
		CLC
		ADC	ADL2
		STA	CV
		JSR	$FC22
		RTS
^6		DEC	INDEX
		JMP	<5
^7		INC	CRDNB
		LDA	POSCUR
		STA	FIRST
		JMP	<5
CURPOS2:
		LDY	#$00
		STY	CH
^1		LDA	($28),Y
		CMP	#”>”
		BEQ	>2
		JSR	UP
		JMP	<1
^2		INY
		LDA	($28),Y
		CMP	#” “
		BEQ	<2
		CMP	#”E"
		BEQ	>3
		JSR	UP
		JMP	<1-2
^3		LDY	CV
		INY
		INY
		STY	ADL2
		RTS
PP:
		JSR	CRDO
		LDA	CURLIGNE
		STA	ADL2
		STA	LINNUM
		LDA	CURLIGNE+1
		STA	ADL2+1
		STA	LINNUM+1
		LDA	#$02
		STA	$44
^1		JSR	FNDLIN
		JSR	NXTLIN2
		BCC	>3
		LDA	$44
		BNE	<1
		LDA	#$05
		STA	$44
		LDA	LINNUM
		STA	CURLIGNE
		LDA	LINNUM+1
		STA	CURLIGNE+1
^2		JSR	PRINTUNA
		BCC	>4
		LDA	$44
		BNE	<2
		LDA	ADL2
		STA	CURLIGNE
		LDA	ADL2+1
		STA	CURLIGNE+1
		JMP	CMDLP
^3		LDX	#$FF
		INX
		LDA	ERRTOP,X
		BEQ	>3
		JSR	COUT
		JMP	<3+2
^3		LDX	#$02
		DEX
		DEC	$44
		LDA	$44
		BNE	<3+2
		INX
		INX	
		STX	$44
		JMP	<1+16
^4		LDX	#$FF
^5		INX
		LDA	ERRBOT,X
		BEQ	>6
		JSR	COUT
		JMP	<5
^6		LDA	ADL2
		STA	CURLIGNE
		LDA	ADL2+1
		STA	CURLIGNE+1
		JMP	CMDLP
REPEAT:
		LDY	#$00
RETBUF		LDA	BUF2,Y
		STA	BUF,Y
		INY
		BNE	RETBUF
		JMP	PARSE2
LOOKPRGM:
		LDA	$69
		CMP	#$04
		BNE	NOPROB
		LDA	$6A
		CMP	#$08
		BNE	NOPROB
		LDA	#$03
		JMP	ERREUR
NOPROB		RTS
PR:
		JSR	POSBUF
		LDA	#$00
		STA	$44
		STA	$45
		TAX
^1		INX
		LDA	BUF,X
		CMP	#”#”
		BNE	<1
^2		INX
		LDA	BUF,X
		CMP	#” “
		BEQ	<2
		CMP	#$B0
		BCC	>3
		CMP	#$BA
		BCS	>3
		STX	LININDEX
		JSR	CONVERT
		LDA	$45
		BNE	>3
		LDA	$44
		CMP	#$08
		BCS	>3
		JSR	PROUT
		JMP	CMDLP
^3		LDA	#$04
		JMP	ERREUR
DOLLAR:
		JSR	POSBUF
		LDX	#$FF
^1		INX
		LDA	BUF,X
		BEQ	>2
		CMP	#”$"
		BNE	<1
		STX	LININDEX
		JSR	CONVERT
		BCC	>2
		JSR	CRDO
		LDA	#”="
		JSR	COUT
		LDX	$44
		LDA	$45
		JSR	LINPRT
		JSR	CRDO
		JMP	CMDLP
^2		LDA	#$05	
		JMP	ERREUR
POSBUF:
		LDX	#$FF
^1		INX
		LDA	BUF,X
		BEQ	>2
		ORA	#%10000000
		STA	BUF,X
		JMP	<1
^2		RTS	
NOLINE:
		ASC	“NO SUCH LINE.”
		HEX	8D00
SORRY:
		HEX	8D
		ASC	“SORRY.”
		HEX	8D00
ERRBOT:
		HEX	8D
		ASC	“BOTTOM.”
		HEX	8D00
NOPRGM:
		HEX	8D
		ASC	“NO PROGRAM IS LOADED.”
		HEX	8D00
BADARG:
		HEX	8D
		ASC	“BAD ARG. #.”
		HEX	8D00
ERRTOP:
		HEX	8D
		ASC	“TOP.”
		HEX	8D00
ERRHEX:
		HEX	8D
		ASC	“ERROR IN HEX. DIGITS.”
		HEX	8D00
MESSCOM:
		ASC	“COMMAND"
		HEX	00
MESSTYPE:
		ASC	“TYPE   “
		HEX	00
MESSEDIT:
		ASC	“EDIT: “
		HEX	00
MESSDOS:
		ASC	“DOS: “
		HEX	00
TBLCOL:
		ASC	“1234567890123456789012345678901234567890”
HLPMSG1:
		ASC	“HELP“
		HEX	00
HLPMSG2:
		ASC	“PRESSEZ UNE TOUCHE”
		HEX	00
;			
HELP:
		LDA	#!24
		STA	$23
		LDA	#HLPMSG
		STA	ADL
		LDA	/HLPMSG
		STA	ADL+1
		LDY	#$00
		STY	TEMP
^9		JSR	HOME
		LDA	#!18
		STA	CH
		LDY	#$00
^0		LDA	HLPMSG1,Y
		BEQ	>1
		JSR	$FDED
		INY
		JMP	<0
^1		LDX	#!23
		JSR	VTAB
		LDA	#!11
		STA	CH
		LDY	#$00
^2		LDA	HLPMSG2,Y
		BEQ	>3
		JSR	$FDED
		INY
		JMP	<2
^3		LDY	TEMP
		LDA	(ADL),Y
		BEQ	>6
		STY	TEMP
		TAX
		JSR	VTAB
		LDY	TEMP
		INY
		BNE	>0
		INC	ADL+1
^0		LDA	(ADL),Y
		STA	CH
^4		INY
		BNE	>0
		INC	ADL+1
^0		LDA	(ADL),Y
		BEQ	>5
		JSR	$FDED
		JMP	<4
^5		INY
		BNE	>0
		INC	ADL+1
^0		STY	TEMP
		JMP	<3
^6		STY	TEMP
		JSR	KEYIN
		LDY	TEMP
		INY	
		BNE	>0
		INC	ADL+1
^0		STY	TEMP
		LDA	(ADL),Y
		BNE	<9
		JMP	$7000
;
HLPMSG:
		END
